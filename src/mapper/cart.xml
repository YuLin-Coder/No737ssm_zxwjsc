<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 配置关于购物车表的 MyBatis映射文件 -->
<!-- namespace：必须与对应的接口全类名一致 id:必须与对应接口的某个对应的方法名一致 -->
<mapper namespace="com.dao.CartDAO">
	<resultMap type="com.entity.Cart" id="cartMap">
		<id property="cartid" column="cartid" />
		<result property="usersid" column="usersid" />
		<result property="goodsid" column="goodsid" />
		<result property="price" column="price" />
		<result property="num" column="num" />
		<result property="addtime" column="addtime" />
		<result property="username" column="username" />
		<result property="goodsname" column="goodsname" />
		<!-- 通过外键关联查询  返回封装Users对象 -->
		<association property="users" column="usersid" select="com.dao.UsersDAO.getUsersById" javaType="com.entity.Users" />
		<!-- 通过外键关联查询  返回封装Goods对象 -->
		<association property="goods" column="goodsid" select="com.dao.GoodsDAO.getGoodsById" javaType="com.entity.Goods" />
	</resultMap>

	<!-- 购物车表 插入SQL语句  CartDAO通过ID(insertCart)调用此配置 -->
	<insert id="insertCart" parameterType="cart">  
		insert into cart(cartid  , usersid  , goodsid  , price  , num  , addtime ) values(#{cartid}  , #{usersid}   , #{goodsid}   , #{price}   , #{num}   , #{addtime} )
	</insert>

	<!-- 购物车表 更新SQL语句  CartDAO通过ID(updateCart)调用此配置 -->
	<update id="updateCart" parameterType="cart">
		update cart set  usersid=#{usersid}  , goodsid=#{goodsid}  , price=#{price}  , num=#{num}  , addtime=#{addtime}  where cartid=#{cartid}
	</update>

	<!-- 购物车表 按主键删除SQL语句  CartDAO通过ID(deleteCart)调用此配置 -->
	<delete id="deleteCart" parameterType="String">
		delete from cart where cartid = #{cartid}
	</delete>

	<!-- 购物车表 查询全部购物车信息SQL语句  CartDAO通过ID(getAllCart)调用此配置  -->
	<select id="getAllCart" resultMap="cartMap">
		select a.* , b.username , c.goodsname  from cart a , users b , goods c  where 1=1 and a.usersid = b.usersid and a.goodsid = c.goodsid  order by cartid desc
	</select>

	<!-- 购物车表 按主键(cartid)查询SQL语句 CartDAO通过ID(getCartById)调用此配置  -->
	<select id="getCartById" parameterType="String" resultMap="cartMap">
		select a.* , b.username , c.goodsname  from cart a , users b , goods c  where 1=1 and a.usersid = b.usersid and a.goodsid = c.goodsid and cartid=#{cartid} 
	</select>

	<!-- 购物车表 按条件精确查询SQL语句 CartDAO通过ID(getCartByCond)调用此配置  -->
	<select id="getCartByCond" parameterType="cart" resultMap="cartMap">
		select a.* , b.username , c.goodsname  from cart a , users b , goods c  where 1=1 and a.usersid = b.usersid and a.goodsid = c.goodsid 
		<if test="usersid != null and '' != usersid">
			and a.usersid = #{usersid}  
		</if>
		<if test="goodsid != null and '' != goodsid">
			and a.goodsid = #{goodsid}  
		</if>
		<if test="price != null and '' != price">
			and a.price = #{price}  
		</if>
		<if test="num != null and '' != num">
			and a.num = #{num}  
		</if>
		<if test="addtime != null and '' != addtime">
			and a.addtime = #{addtime}  
		</if>
	</select>

	<!-- 购物车表 按条件模糊查询SQL语句 CartDAO通过ID(getCartByLike)调用此配置  -->
	<select id="getCartByLike" parameterType="cart" resultMap="cartMap">
		select a.* , b.username , c.goodsname  from cart a , users b , goods c  where 1=1 and a.usersid = b.usersid and a.goodsid = c.goodsid 
		<if test="usersid != null and '' != usersid">
			and b.username like CONCAT('%', CONCAT(#{usersid}, '%'))
		</if>
		<if test="goodsid != null and '' != goodsid">
			and c.goodsname like CONCAT('%', CONCAT(#{goodsid}, '%'))
		</if>
		<if test="price != null and '' != price">
			and a.price like CONCAT('%', CONCAT(#{price}, '%'))
		</if>
		<if test="num != null and '' != num">
			and a.num like CONCAT('%', CONCAT(#{num}, '%'))
		</if>
		<if test="addtime != null and '' != addtime">
			and a.addtime like CONCAT('%', CONCAT(#{addtime}, '%'))
		</if>
	</select>
</mapper>





























