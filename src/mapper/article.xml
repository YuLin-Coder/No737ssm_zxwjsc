<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 配置关于新闻公告表的 MyBatis映射文件 -->
<!-- namespace：必须与对应的接口全类名一致 id:必须与对应接口的某个对应的方法名一致 -->
<mapper namespace="com.dao.ArticleDAO">
	<resultMap type="com.entity.Article" id="articleMap">
		<id property="articleid" column="articleid" />
		<result property="title" column="title" />
		<result property="image" column="image" />
		<result property="contents" column="contents" />
		<result property="addtime" column="addtime" />
		<result property="hits" column="hits" />
	</resultMap>

	<!-- 新闻公告表 插入SQL语句  ArticleDAO通过ID(insertArticle)调用此配置 -->
	<insert id="insertArticle" parameterType="article">  
		insert into article(articleid  , title  , image  , contents  , addtime  , hits ) values(#{articleid}  , #{title}   , #{image}   , #{contents}   , #{addtime}   , #{hits} )
	</insert>

	<!-- 新闻公告表 更新SQL语句  ArticleDAO通过ID(updateArticle)调用此配置 -->
	<update id="updateArticle" parameterType="article">
		update article set  title=#{title}  , image=#{image}  , contents=#{contents}  , addtime=#{addtime}  , hits=#{hits}  where articleid=#{articleid}
	</update>

	<!-- 新闻公告表 按主键删除SQL语句  ArticleDAO通过ID(deleteArticle)调用此配置 -->
	<delete id="deleteArticle" parameterType="String">
		delete from article where articleid = #{articleid}
	</delete>

	<!-- 新闻公告表 查询全部新闻公告信息SQL语句  ArticleDAO通过ID(getAllArticle)调用此配置  -->
	<select id="getAllArticle" resultMap="articleMap">
		select a.*  from article a  where 1=1  order by articleid desc
	</select>

	<!-- 新闻公告表 按主键(articleid)查询SQL语句 ArticleDAO通过ID(getArticleById)调用此配置  -->
	<select id="getArticleById" parameterType="String" resultMap="articleMap">
		select a.*  from article a  where 1=1 and articleid=#{articleid} 
	</select>

	<!-- 新闻公告表 按条件精确查询SQL语句 ArticleDAO通过ID(getArticleByCond)调用此配置  -->
	<select id="getArticleByCond" parameterType="article" resultMap="articleMap">
		select a.*  from article a  where 1=1 
		<if test="title != null and '' != title">
			and a.title = #{title}  
		</if>
		<if test="image != null and '' != image">
			and a.image = #{image}  
		</if>
		<if test="contents != null and '' != contents">
			and a.contents = #{contents}  
		</if>
		<if test="addtime != null and '' != addtime">
			and a.addtime = #{addtime}  
		</if>
		<if test="hits != null and '' != hits">
			and a.hits = #{hits}  
		</if>
	</select>

	<!-- 新闻公告表 按条件模糊查询SQL语句 ArticleDAO通过ID(getArticleByLike)调用此配置  -->
	<select id="getArticleByLike" parameterType="article" resultMap="articleMap">
		select a.*  from article a  where 1=1 
		<if test="title != null and '' != title">
			and a.title like CONCAT('%', CONCAT(#{title}, '%'))
		</if>
		<if test="image != null and '' != image">
			and a.image like CONCAT('%', CONCAT(#{image}, '%'))
		</if>
		<if test="contents != null and '' != contents">
			and a.contents like CONCAT('%', CONCAT(#{contents}, '%'))
		</if>
		<if test="addtime != null and '' != addtime">
			and a.addtime like CONCAT('%', CONCAT(#{addtime}, '%'))
		</if>
		<if test="hits != null and '' != hits">
			and a.hits like CONCAT('%', CONCAT(#{hits}, '%'))
		</if>
	</select>
</mapper>





























